{
  "name": "connect-four-monorepo",
  "private": true,
  "scripts": {
    "start": "node scripts/enterprise/unified-enterprise-launcher.js --profile development",
    "start:minimal": "node scripts/enterprise/unified-enterprise-launcher.js --profile minimal",
    "start:development": "node scripts/enterprise/unified-enterprise-launcher.js --profile development",
    "start:production": "node scripts/enterprise/unified-enterprise-launcher.js --profile production",
    "start:testing": "node scripts/enterprise/unified-enterprise-launcher.js --profile testing",
    "start:enterprise": "node scripts/enterprise/unified-enterprise-launcher.js --profile enterprise",
    "start:turbo": "node scripts/enterprise/unified-enterprise-launcher.js --profile development",
    "start:turbo:build": "node scripts/enterprise/unified-enterprise-launcher.js --profile production",
    "start:turbo:build:enhanced": "node scripts/enterprise/unified-enterprise-launcher.js turbo:build:enhanced",
    "start:turbo:build:full": "npm run system:health && node scripts/enterprise/unified-enterprise-launcher.js --profile production_enhanced --force",
    "start:turbo:build:enhanced:v2": "node scripts/enterprise/unified-enterprise-launcher-v2.js turbo:build:enhanced",
    "start:quick": "node scripts/enterprise/quick-launcher.js",
    "start:super": "node scripts/enterprise/super-quick-launcher.js",
    "start:production:full": "npm run system:health && node scripts/enterprise/unified-enterprise-launcher.js --profile production_enhanced",
    "start:fast": "node scripts/enterprise/unified-enterprise-launcher.js --profile minimal",
    "start:force": "node scripts/enterprise/enterprise-parallel-launcher.js --quick-launch",
    "start:all": "./start-all.sh",
    "start:all:fast": "./start-all.sh --fast-mode",
    "start:all:optimized": "./scripts/enable-ml-optimization.sh && ./start-all.sh",
    "start:all:debug": "./start-all.sh --debug",
    "start:all:memory-opt": "./start-all.sh --memory-opt",
    "start:all:dev": "./start-all.sh --dev",
    "stop:all": "./stop-all.sh",
    "restart:all": "./restart-all.sh",
    "restart:all:fast": "FAST_MODE=true ./restart-all.sh",
    "restart:all:optimized": "./scripts/enable-ml-optimization.sh && ./restart-all.sh",
    "restart:integrated": "./restart-all-with-integration.sh",
    "start:all:comprehensive": "./start-all-comprehensive.sh",
    "stop:all:comprehensive": "./stop-all-comprehensive.sh",
    "restart:all:comprehensive": "npm run stop:all:comprehensive && npm run start:all:comprehensive",
    "restart:all:progress": "./restart-all-comprehensive-progress.sh",
    "stop:all:progress": "./stop-all-comprehensive-progress.sh",
    "start:all:progress": "./start-all-comprehensive-progress.sh",
    "services:show": "./scripts/show-services.sh",
    "start:simple": "npm run start:force",
    "stop:simple": "pkill -f 'node.*backend' && pkill -f 'react-scripts' && pkill -f 'python.*ml_service' || true",
    "restart:simple": "npm run stop:simple && sleep 2 && npm run start:simple",
    "fix:dependencies": "./scripts/self-healing-installer.sh",
    "health:check": "node scripts/check-dependencies.js",
    "migrate:tensorflow": "./scripts/migrate-tensorflow.sh",
    "test:integration": "./test-integration.sh",
    "integration:status": "curl -s http://localhost:8888/metrics 2>/dev/null | python3 -m json.tool || echo 'Integration service not running'",
    "simulations:status": "grep -c 'Simulation.*completed' logs/backend.log 2>/dev/null || echo '0'",
    "status": "./check-status.sh",
    "start:backend": "./scripts/legacy/smart-start.sh --backend-only",
    "start:frontend": "./scripts/legacy/smart-start.sh --frontend-only",
    "start:follow": "./scripts/legacy/smart-start.sh --follow-logs",
    "dev": "node scripts/enterprise/unified-enterprise-launcher.js --profile development",
    "dev:turbo": "node scripts/enterprise/unified-enterprise-launcher.js --profile development",
    "dev:turbo:build": "node scripts/enterprise/unified-enterprise-launcher.js --profile production",
    "dev:fast": "node scripts/enterprise/unified-enterprise-launcher.js --profile minimal",
    "dev:enterprise": "node scripts/enterprise/unified-enterprise-launcher.js --profile enterprise",
    "dev:clean": "node scripts/enterprise/intelligent-resource-manager.js --cleanup",
    "dev:logs": "./scripts/legacy/smart-start.sh --follow-logs",
    "stop": "pkill -f 'unified-enterprise-launcher\\|enterprise-parallel-launcher\\|ai-stability-manager\\|intelligent-resource-manager'; ./scripts/legacy/smart-stop-parallel.sh",
    "stop:turbo": "pkill -f 'unified-enterprise-launcher\\|enterprise-parallel-launcher\\|ai-stability-manager\\|intelligent-resource-manager\\|performance-analytics-suite'; ./scripts/legacy/smart-stop-parallel.sh",
    "stop:turbo:enhanced": "pkill -SIGINT -f 'unified-enterprise-launcher.*turbo:build:enhanced' || pkill -f 'unified-enterprise-launcher\\|enterprise-parallel-launcher\\|ai-stability-manager\\|intelligent-resource-manager\\|performance-analytics-suite\\|ai-orchestration-dashboard\\|advanced-ai-diagnostics\\|enterprise-model-manager\\|backend.*nest\\|frontend.*react-scripts\\|ml_service.*python'; ./scripts/legacy/smart-stop-parallel.sh",
    "stop:turbo:full": "npm run stop:turbo:enhanced && npm run system:cleanup",
    "stop:enterprise": "pkill -f 'node scripts/(unified-enterprise-launcher|enterprise-parallel-launcher|ai-stability-manager|intelligent-resource-manager|performance-analytics-suite|advanced-deployment-manager|ai-comprehensive-testing|enterprise-model-manager|advanced-ai-diagnostics|rlhf-system-manager|ai-orchestration-dashboard)'",
    "stop:legacy": "./scripts/tooling/port-manager-v2.sh emergency",
    "stop:parallel": "./scripts/legacy/smart-stop-parallel.sh",
    "stop:interactive": "./scripts/tooling/port-manager-v2.sh menu",
    "stop:force": "pkill -f 'node scripts/'; ./scripts/tooling/port-manager-v2.sh emergency",
    "stop:gentle": "./scripts/legacy/smart-stop-parallel.sh",
    "restart": "npm run stop && npm run start",
    "restart:turbo": "npm run stop:turbo && npm run start:turbo",
    "restart:turbo:build": "npm run stop:turbo && npm run start:turbo:build",
    "restart:turbo:build:enhanced": "npm run stop:turbo:enhanced && npm run start:turbo:build:enhanced",
    "restart:turbo:build:enhanced:force:clean": "./scripts/enhanced-restart.sh",
    "restart:turbo:build:enhanced:force:clean:fixed": "./scripts/enhanced-restart-fixed.sh",
    "restart:turbo:build:full": "npm run stop:turbo:full && npm run start:turbo:build:full",
    "restart:fast": "npm run stop && npm run start:fast",
    "restart:super": "npm run stop && npm run start:super",
    "restart:enterprise": "npm run stop:enterprise && npm run start:enterprise",
    "status": "ps aux | grep -E 'unified-enterprise-launcher|enterprise-parallel-launcher|ai-stability-manager' | grep -v grep",
    "status:turbo": "ps aux | grep -E 'unified-enterprise-launcher|ai-stability-manager|intelligent-resource-manager|performance-analytics-suite' | grep -v grep",
    "status:turbo:enhanced": "ps aux | grep -E 'unified-enterprise-launcher|ai-stability-manager|intelligent-resource-manager|performance-analytics-suite|ai-orchestration-dashboard|advanced-ai-diagnostics|enterprise-model-manager' | grep -v grep",
    "status:detailed": "./scripts/tooling/port-manager-v2.sh detailed",
    "zombie:check": "echo '🧟 ZOMBIE PROCESS DIAGNOSTICS' && echo '🔍 Checking port 3001...' && lsof -iTCP:3001 -sTCP:LISTEN && echo '🔍 Checking for React development servers...' && ps aux | grep -E 'react-scripts|vite|webpack' | grep -v grep && echo '🔍 Checking for Node.js processes...' && ps aux | grep node | grep -v grep | head -10",
    "zombie:kill": "echo '🧟 KILLING ZOMBIE PROCESSES' && echo '🔍 Killing processes on port 3001...' && lsof -iTCP:3001 -sTCP:LISTEN | awk 'NR>1 {print $2}' | xargs -r kill -9 && echo '🔍 Killing React development servers...' && pkill -f 'react-scripts|vite|webpack' 2>/dev/null || true && echo '✅ Zombie processes killed'",
    "status:enterprise": "ps aux | grep -E 'node scripts/(unified-enterprise-launcher|enterprise-parallel-launcher|ai-stability-manager|intelligent-resource-manager|performance-analytics-suite|advanced-deployment-manager)' | grep -v grep",
    "scan": "./scripts/tooling/port-manager-v2.sh status",
    "kill-port": "./scripts/tooling/port-manager-v2.sh menu",
    "kill-nest": "node scripts/enterprise/intelligent-resource-manager.js --kill-processes",
    "emergency:ports": "./scripts/tooling/port-manager-v2.sh emergency",
    "cleanup": "node scripts/enterprise/intelligent-resource-manager.js --cleanup",
    "train": "./scripts/ml/enhanced-pipeline.sh",
    "train:help": "./scripts/ml/enhanced-pipeline.sh --help",
    "train:offline": "./scripts/ml/enhanced-pipeline.sh offline",
    "test": "./scripts/testing/test-workflows.sh",
    "test:enterprise": "node scripts/enterprise/ai-comprehensive-testing.js",
    "test:ai": "node scripts/enterprise/ai-comprehensive-testing.js --comprehensive",
    "test:performance": "./scripts/testing/performance-demo.sh",
    "test:integration": "./scripts/testing/test-workflows.sh integration",
    "test:move-analysis": "./scripts/simple-move-analysis-test.sh",
    "test:move-analysis:comprehensive": "./scripts/test-move-analysis.sh",
    "test:move-analysis:integration": "./scripts/test-move-analysis-integration.sh",
    "test:move-analysis:backend": "echo 'Backend tests skipped due to TensorFlow compilation issues. Use integration tests instead.'",
    "ml:start": "./scripts/ml/start-ml-services.sh",
    "ml:start:dev": "./scripts/ml/ml-pipeline-manager.sh start development",
    "ml:start:prod": "./scripts/ml/ml-pipeline-manager.sh start production",
    "ml:stop": "./scripts/ml/start-ml-services.sh --stop",
    "ml:restart": "npm run ml:stop && npm run ml:start",
    "ml:status": "./scripts/ml/ml-pipeline-manager.sh status",
    "ml:components": "./scripts/ml/ml-pipeline-manager.sh components",
    "ml:train": "./scripts/ml/ml-pipeline-manager.sh train",
    "ml:train:ppo": "./scripts/ml/ml-pipeline-manager.sh train ppo 2000",
    "ml:train:dqn": "./scripts/ml/ml-pipeline-manager.sh train dqn 1500",
    "ml:deploy": "./scripts/ml/ml-pipeline-manager.sh deploy",
    "ml:deploy:prod": "./scripts/ml/ml-pipeline-manager.sh deploy latest production",
    "ml:evaluate": "./scripts/ml/ml-pipeline-manager.sh evaluate",
    "ml:pipeline": "./scripts/ml/ml-pipeline-manager.sh menu",
    "ml:legacy": "./scripts/ml/ml-manager.sh",
    "ml:setup": "./scripts/ml/setup-python-env.sh",
    "system:health": "./scripts/tooling/port-manager-v2.sh health",
    "health:check": "./scripts/health-check.sh",
    "health:detailed": "./scripts/health-check.sh",
    "check:difficulty": "./scripts/check-difficulty-learning.sh",
    "test:difficulty": "npx ts-node test_difficulty_learning.ts",
    "demo:restart": "./scripts/demo-enhanced-restart.sh",
    "monitor:advanced": "./scripts/advanced-monitor.sh",
    "system:status": "./scripts/tooling/port-manager-v2.sh status",
    "system:cleanup": "./scripts/tooling/port-manager-v2.sh cleanup",
    "emergency": "./scripts/tooling/port-manager-v2.sh cleanup && pkill -f 'node.*(react-scripts|nest|start)' && pkill -f 'python.*ml_service'",
    "emergency:cleanup": "curl -X POST http://localhost:3000/api/emergency/cleanup",
    "m1:monitor": "open http://localhost:3001/dashboard",
    "m1:cleanup": "curl -X POST http://localhost:3000/api/emergency/cleanup",
    "m1:reset-tf": "curl -X POST http://localhost:3000/api/emergency/reset-tensorflow",
    "m1:gc": "curl -X POST http://localhost:3000/api/emergency/gc",
    "m1:status": "curl http://localhost:3000/api/emergency/status | python3 -m json.tool",
    "m1:benchmark": "cd backend && npm run benchmark:memory",
    "start:m1": "./start-all.sh --m1-opt",
    "restart:m1": "./restart-all.sh --m1-opt",
    "test:memory": "cd backend && npm run test:memory",
    "benchmark": "cd backend && npm run benchmark",
    "benchmark:memory": "cd backend && npm run benchmark:memory",
    "benchmark:algorithms": "cd backend && npm run benchmark:algorithms",
    "cleanup:force": "./scripts/tooling/port-manager-v2.sh cleanup && npm cache clean --force && rm -rf frontend/build backend/dist ml_service/__pycache__",
    "enterprise:launch": "node scripts/enterprise/unified-enterprise-launcher.js",
    "enterprise:monitor": "node scripts/enterprise/intelligent-resource-manager.js",
    "enterprise:analytics": "node scripts/enterprise/performance-analytics-suite.js",
    "enterprise:integration": "./scripts/enterprise-integration.sh",
    "enterprise:status": "./scripts/enterprise-integration.sh status",
    "system:emergency": "./scripts/tooling/port-manager-v2.sh emergency",
    "system:ai": "./scripts/tooling/port-manager-v2.sh ai",
    "ports": "./scripts/tooling/port-manager-v2.sh menu",
    "ports:health": "./scripts/tooling/port-manager-v2.sh health",
    "ports:cleanup": "./scripts/tooling/port-manager-v2.sh cleanup",
    "ports:emergency": "./scripts/tooling/port-manager-v2.sh emergency",
    "enterprise:dashboard": "node scripts/enterprise/ai-orchestration-dashboard.js",
    "enterprise:stability": "node scripts/enterprise/ai-stability-manager.js",
    "enterprise:resources": "node scripts/enterprise/intelligent-resource-manager.js",
    "enterprise:deployment": "node scripts/enterprise/advanced-deployment-manager.js",
    "enterprise:testing": "node scripts/enterprise/ai-comprehensive-testing.js",
    "enterprise:models": "node scripts/enterprise/enterprise-model-manager.js",
    "enterprise:diagnostics": "node scripts/enterprise/advanced-ai-diagnostics.js",
    "enterprise:rlhf": "node scripts/enterprise/rlhf-system-manager.js",
    "legacy:start": "./scripts/legacy/smart-start.sh",
    "legacy:start:parallel": "./scripts/legacy/smart-start-parallel.sh",
    "legacy:stop": "./scripts/legacy/smart-stop-parallel.sh",
    "legacy:ports": "./scripts/legacy/port-manager.sh",
    "legacy:ml": "./scripts/ml/ml-manager.sh"
  },
  "devDependencies": {
    "@types/node": "^18.0.0",
    "axios": "^1.10.0",
    "typescript": "^5.9.3"
  },
  "dependencies": {
    "dotenv": "^16.0.0",
    "socket.io-client": "^4.8.1"
  }
}